name: Test, Build, Publish to NPM & Deploy Demo

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test-build-publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run type check
        run: npm run type-check

      - name: Run tests
        run: npm test -- --watchAll=false

      - name: Auto-bump version
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Get current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # Bump version
          npm version patch
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"
          
          # Check if this version already exists on NPM
          if npm view sisyphus-progressbar@$NEW_VERSION version 2>/dev/null; then
            echo "Version $NEW_VERSION already exists on NPM. Bumping again..."
            npm version patch
            NEW_VERSION=$(node -p "require('./package.json').version")
            echo "Final version: $NEW_VERSION"
          fi
          
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          git push origin main
          git push origin --tags

      - name: Build package
        run: npm run build

      - name: Check if version exists on NPM
        id: check-version
        run: |
          if npm view sisyphus-progressbar@$NEW_VERSION version 2>/dev/null; then
            echo "version-exists=true" >> $GITHUB_OUTPUT
            echo "Version $NEW_VERSION already exists on NPM, skipping publish"
          else
            echo "version-exists=false" >> $GITHUB_OUTPUT
            echo "Version $NEW_VERSION does not exist on NPM, proceeding with publish"
          fi

      - name: Publish to NPM
        if: steps.check-version.outputs.version-exists == 'false'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Skip publish message
        if: steps.check-version.outputs.version-exists == 'true'
        run: echo "Skipping NPM publish as version $NEW_VERSION already exists"

  deploy-demo:
    runs-on: ubuntu-latest
    needs: test-build-publish
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            example/package-lock.json

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install root dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Install example dependencies
        working-directory: ./example
        run: npm ci

      - name: Build example for GitHub Pages
        working-directory: ./example
        run: |
          # Set the correct base path for GitHub Pages
          PUBLIC_URL="/SisyphusLoader" npm run build

      - name: Verify build output
        working-directory: ./example
        run: |
          if [ ! -f "build/index.html" ]; then
            echo "❌ build/index.html not found"
            exit 1
          fi
          if [ ! -d "build/static" ]; then
            echo "❌ build/static directory not found"
            exit 1
          fi
          echo "✅ Example build completed successfully"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./example/build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
